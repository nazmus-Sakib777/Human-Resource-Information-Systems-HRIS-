// <auto-generated />
using System;
using HRIS_R62.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HRIS_R62.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250605223954_SeedInitialDataNkB")]
    partial class SeedInitialDataNkB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmploymentType", b =>
                {
                    b.Property<string>("EmploymentTypeID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmploymentTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EmploymentTypeID");

                    b.ToTable("EmploymentTypes");
                });

            modelBuilder.Entity("HRIS_R62.Models.AttendanceBonus", b =>
                {
                    b.Property<string>("AttendanceBonusID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BonusAmount")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("BonusCategory")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AttendanceBonusID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("AttendanceBonus");
                });

            modelBuilder.Entity("HRIS_R62.Models.AttendanceConfiguration", b =>
                {
                    b.Property<string>("AttendanceConfigurationID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeOnly>("EveningSnacksBreakEndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("EveningSnacksBreakStartTime")
                        .HasColumnType("time");

                    b.Property<string>("GraceTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("LunchBreakEndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("LunchBreakStartTime")
                        .HasColumnType("time");

                    b.HasKey("AttendanceConfigurationID");

                    b.ToTable("AttendanceConfigurations");
                });

            modelBuilder.Entity("HRIS_R62.Models.AttendanceRecord", b =>
                {
                    b.Property<string>("AttendanceRecordID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AttendanceConfigurationID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("date");

                    b.Property<string>("AttendanceStatusID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DayType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeInformationEmployeeID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeOnly>("InTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("OTEnd")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("OTStart")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("OutTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TotalOvertimeHours")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TotalRegularHours")
                        .HasColumnType("time");

                    b.HasKey("AttendanceRecordID");

                    b.HasIndex("AttendanceConfigurationID");

                    b.HasIndex("AttendanceStatusID");

                    b.HasIndex("EmployeeInformationEmployeeID");

                    b.ToTable("AttendanceRecords");
                });

            modelBuilder.Entity("HRIS_R62.Models.AttendanceStatus", b =>
                {
                    b.Property<string>("AttendanceStatusID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AttendanceStatusID");

                    b.ToTable("AttendanceStatuss");
                });

            modelBuilder.Entity("HRIS_R62.Models.BonusRecord", b =>
                {
                    b.Property<string>("BonusRecordID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BasicSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BonusAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("BonusDate")
                        .HasColumnType("date");

                    b.Property<decimal>("BonusPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ConveyanceAllowance")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FestivalName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("GrossSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HouseRent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("JoiningDate")
                        .HasColumnType("date");

                    b.Property<decimal>("MedicalAllowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetPayableAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OtherAllowance")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("RevenueStampAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BonusRecordID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("BonusRecords");
                });

            modelBuilder.Entity("HRIS_R62.Models.Building", b =>
                {
                    b.Property<string>("BuildingID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Floor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BuildingID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("HRIS_R62.Models.CareerHistory", b =>
                {
                    b.Property<string>("EntryNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EntryDate")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<string>("EntryType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntryNumber");

                    b.HasIndex("EmployeeID");

                    b.ToTable("CareerHistories");
                });

            modelBuilder.Entity("HRIS_R62.Models.ChildrenInformation", b =>
                {
                    b.Property<string>("ChildID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("BloodGroup")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("ChildrenName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Flag")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Gender")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("MaritalStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ChildID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("ChildrenInformations");
                });

            modelBuilder.Entity("HRIS_R62.Models.Company", b =>
                {
                    b.Property<string>("CompanyID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyNameLocal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyShortName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FaxNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CompanyID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("HRIS_R62.Models.ContactPersonInformation", b =>
                {
                    b.Property<string>("ContactID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Flag")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Occupation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Relation")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ContactID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("ContactPersonInformations");
                });

            modelBuilder.Entity("HRIS_R62.Models.DateWiseOfficeTime", b =>
                {
                    b.Property<string>("DateWiseOfficeTimeID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeOnly>("BreakDuration")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("ConsideredLunchHour")
                        .HasColumnType("time");

                    b.Property<string>("EmployeeInformationEmployeeID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ShiftEndDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ShiftStartDateTime")
                        .HasColumnType("datetime");

                    b.HasKey("DateWiseOfficeTimeID");

                    b.HasIndex("EmployeeInformationEmployeeID");

                    b.ToTable("DateWiseOfficeTimes");
                });

            modelBuilder.Entity("HRIS_R62.Models.Department", b =>
                {
                    b.Property<string>("DepartmentID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DepartmentNameLocal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DepartmentShortName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DepartmentID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("HRIS_R62.Models.Designation", b =>
                {
                    b.Property<string>("DesignationID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DesignationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DesignationNameLocal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DesignationID");

                    b.ToTable("Designations");
                });

            modelBuilder.Entity("HRIS_R62.Models.DisciplinaryAction", b =>
                {
                    b.Property<string>("ActionID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ActionID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("DisciplinaryActions");
                });

            modelBuilder.Entity("HRIS_R62.Models.Division", b =>
                {
                    b.Property<string>("DivisionID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DivisionName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DivisionNameLocal")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DivisionShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("DivisionID");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("HRIS_R62.Models.EarlyLeaveInformation", b =>
                {
                    b.Property<string>("EarlyLeaveInformationID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LeaveDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeOnly>("LeaveTime")
                        .HasColumnType("time");

                    b.Property<string>("LeaveType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("EarlyLeaveInformationID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("EarlyLeaveInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.EmployeeBenefits", b =>
                {
                    b.Property<string>("BenefitID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovalDate")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<decimal>("BasicSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("BenefitActivationDate")
                        .HasColumnType("date");

                    b.Property<decimal>("BenefitAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("BenefitDate")
                        .HasColumnType("date");

                    b.Property<string>("BenefitType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("CashIncentive")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ConveyanceAllowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EntryUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GradeID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("GrossSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HouseRent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LocalAreaClerance")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocalAreaRemarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("LunchAllowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MedicalAllowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NewNetSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OtherAllowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PreviousNetSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SalaryGradeID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SalaryRecordID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SalaryStepID")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("BenefitID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("GradeID");

                    b.HasIndex("SalaryGradeID");

                    b.HasIndex("SalaryRecordID");

                    b.ToTable("EmployeeBenefits");
                });

            modelBuilder.Entity("HRIS_R62.Models.EmployeeComplaint", b =>
                {
                    b.Property<string>("ComplaintID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ComplaintDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ComplaintType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ComplaintID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("EmployeeComplaints");
                });

            modelBuilder.Entity("HRIS_R62.Models.EmployeeInformation", b =>
                {
                    b.Property<string>("EmployeeID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("AppointmentType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("date");

                    b.Property<string>("Association")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AttendanceRecordID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BloodGroup")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ConfirmationDate")
                        .HasColumnType("date");

                    b.Property<decimal>("CurrentSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateOfMarriage")
                        .HasColumnType("date");

                    b.Property<string>("DepartmentID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DesignationID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DistrictOfBirth")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DivisionID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeNameLocal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeePhoto")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("EmployeeSignature")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("EmployeeStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmploymentTypeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FatherNameLocal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FatherOccupation")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("GradeID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IDentificationMark")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IsLineSelected")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMobileBanking")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOTAllowed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("JoiningDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LicenseExpiryDate")
                        .HasColumnType("date");

                    b.Property<string>("LicenseIssueAuthority")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LicenseIssueDate")
                        .HasColumnType("date");

                    b.Property<string>("LicenseIssuePlace")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LineID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocalAreaClerance")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LocalAreaRemarks")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MembershipCardNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MembershipType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("MembershipValIDityDate")
                        .HasColumnType("date");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("MotherName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MotherNameLocal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MotherOccupation")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NationalIDNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("OldEmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PassportExpiryDate")
                        .HasColumnType("date");

                    b.Property<string>("PassportIssueAuthority")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("PassportIssueDate")
                        .HasColumnType("date");

                    b.Property<string>("PassportIssuePlace")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PermanentAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PlaceOfBirth")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("PostingDate")
                        .HasColumnType("date");

                    b.Property<string>("PresentAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PreviousEmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceAddress1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReferenceAddress2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReferenceName1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReferenceName2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReferenceOccupation1")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReferenceOccupation2")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReferencePhone1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("ReferencePhone2")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("ReferenceRelation1")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReferenceRelation2")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Religion")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("RetirementDate")
                        .HasColumnType("date");

                    b.Property<decimal>("SalaryAtJoining")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SalaryGradeID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SalaryRecordID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SalaryStepID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectionID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ServiceLength")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ShiftEmployeeID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SpouseBloodGroup")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("SpouseDateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("SpouseName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SpouseOccupation")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WeeklyHoliDay")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("EmployeeID");

                    b.HasIndex("AttendanceRecordID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("DesignationID");

                    b.HasIndex("DivisionID");

                    b.HasIndex("EmploymentTypeID");

                    b.HasIndex("GradeID");

                    b.HasIndex("LineID");

                    b.HasIndex("SalaryGradeID");

                    b.HasIndex("SalaryRecordID");

                    b.HasIndex("SectionID");

                    b.HasIndex("ShiftEmployeeID");

                    b.HasIndex("UnitID");

                    b.ToTable("EmployeeInformations");
                });

            modelBuilder.Entity("HRIS_R62.Models.EmployeeSkill", b =>
                {
                    b.Property<string>("SkillID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CertificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CertificationDetails")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SkillLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SkillID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("EmployeeSkills");
                });

            modelBuilder.Entity("HRIS_R62.Models.EmployeeTax", b =>
                {
                    b.Property<string>("EmployeeTaxID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("CalculatedTax")
                        .HasColumnType("float");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocalAreaClerance")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocalAreaRemarks")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("MonthlyGross")
                        .HasColumnType("float");

                    b.Property<double?>("ProposedTax")
                        .HasColumnType("float");

                    b.Property<DateTime>("SalaryDate")
                        .HasColumnType("date");

                    b.Property<string>("TaxMonth")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TaxYear")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("EmployeeTaxID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("EmployeeTaxes");
                });

            modelBuilder.Entity("HRIS_R62.Models.FestivalBonus", b =>
                {
                    b.Property<string>("FestivalBonusID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BonusEligibilityCheck")
                        .HasColumnType("int");

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("date");

                    b.Property<DateTime>("EffectiveTo")
                        .HasColumnType("date");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FestivalBonusDate")
                        .HasColumnType("date");

                    b.Property<string>("FestivalName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("date");

                    b.Property<decimal>("PercentageAfterOneYear")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal>("PercentageBelowOneYear")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FestivalBonusID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("FestivalBonuses");
                });

            modelBuilder.Entity("HRIS_R62.Models.FoodCharge", b =>
                {
                    b.Property<string>("FoodChargeID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ChargeAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("ChargeDate")
                        .HasColumnType("date");

                    b.Property<string>("ChargeType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("date");

                    b.Property<string>("EntryUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("FoodChargeID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("FoodCharges");
                });

            modelBuilder.Entity("HRIS_R62.Models.Grade", b =>
                {
                    b.Property<string>("GradeID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Basic")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ConveyanceAllowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FromGrossSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GradeShortID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Gross")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HouseRent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LunchAllowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Medical")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ToGrossSalary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("GradeID");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("HRIS_R62.Models.HoliDayBillRate", b =>
                {
                    b.Property<string>("HoliDayBillRateID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HoliDayBillRateValue")
                        .HasColumnType("int");

                    b.Property<decimal>("SalaryMaximum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalaryMinimum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SerialNumber")
                        .HasColumnType("int");

                    b.HasKey("HoliDayBillRateID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("HoliDayBillRates");
                });

            modelBuilder.Entity("HRIS_R62.Models.HoliDayEntitledEmployee", b =>
                {
                    b.Property<string>("HoliDayEntitledEmployeeID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AttendanceStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EntryUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocalAreaClerance")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocalAreaRemarks")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("HoliDayEntitledEmployeeID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("HoliDayEntitledEmployees");
                });

            modelBuilder.Entity("HRIS_R62.Models.HoliDayInformation", b =>
                {
                    b.Property<string>("HoliDayInformationID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntryUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("HoliDayInformationID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("HoliDayInformations");
                });

            modelBuilder.Entity("HRIS_R62.Models.LateApproval", b =>
                {
                    b.Property<string>("LateApprovalID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("date");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EntryUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LateDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("LateEntryDate")
                        .HasColumnType("date");

                    b.Property<string>("LateReason")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LateTime")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("LocalAreaClerance")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocalAreaRemarks")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("LateApprovalID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("LateApprovals");
                });

            modelBuilder.Entity("HRIS_R62.Models.LeaveApproval", b =>
                {
                    b.Property<string>("LeaveApprovalID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeInformationsEmployeeID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EntryUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LeaveEnjoyed")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime>("LeaveFromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LeaveName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("LeaveToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LeaveYear")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("LocalAreaClerance")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocalAreaRemarks")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ProvidedLeave")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TotalLeave")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("LeaveApprovalID");

                    b.HasIndex("EmployeeInformationsEmployeeID");

                    b.ToTable("LeaveApprovals");
                });

            modelBuilder.Entity("HRIS_R62.Models.LeaveEncashment", b =>
                {
                    b.Property<string>("LeaveEncashmentID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActualDays")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<decimal>("ActualEncashAmount")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("date");

                    b.Property<decimal>("BasicSalary")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("ComputedDays")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ComputedEncashAmount")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EncashMonth")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("EncashYear")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("LastMonthWorkingDays")
                        .HasColumnType("int");

                    b.Property<decimal>("LeaveEncashAmount")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("LocalAreaClerance")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocalAreaRemarks")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("OtherDeductions")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("LeaveEncashmentID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("LeaveEncashments");
                });

            modelBuilder.Entity("HRIS_R62.Models.LeaveEncashmentRate", b =>
                {
                    b.Property<string>("LeaveEncashmentRateID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeInformationEmployeeID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LeaveEncashmentID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("RateInPercent")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<decimal>("ToGrossSalary")
                        .HasColumnType("numeric(18, 0)");

                    b.HasKey("LeaveEncashmentRateID");

                    b.HasIndex("EmployeeInformationEmployeeID");

                    b.HasIndex("LeaveEncashmentID");

                    b.ToTable("LeaveEncashmentRates");
                });

            modelBuilder.Entity("HRIS_R62.Models.LeaveRecord", b =>
                {
                    b.Property<string>("LeaveRecordID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("date");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("date");

                    b.Property<string>("EntryUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LeaveDate")
                        .HasColumnType("date");

                    b.Property<string>("LeaveEnjoyed")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("LeaveTime")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("LeaveType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LeaveYear")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("MaternityBillID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TotalLeave")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("LeaveRecordID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("MaternityBillID");

                    b.ToTable("LeaveRecords");
                });

            modelBuilder.Entity("HRIS_R62.Models.LineInformation", b =>
                {
                    b.Property<string>("LineID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BuildingID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DivisionID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("date");

                    b.Property<string>("LineName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SectionsID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitID")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LineID");

                    b.HasIndex("BuildingID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("DivisionID");

                    b.HasIndex("SectionsID");

                    b.HasIndex("UnitID");

                    b.ToTable("LineInformations");
                });

            modelBuilder.Entity("HRIS_R62.Models.LogFile", b =>
                {
                    b.Property<Guid>("LogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LogID");

                    b.ToTable("LogFiles");
                });

            modelBuilder.Entity("HRIS_R62.Models.ManualAttendance", b =>
                {
                    b.Property<string>("ManualAttendanceID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("date");

                    b.Property<string>("AttendanceTime")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("date");

                    b.Property<string>("EntryUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocalAreaClerance")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocalAreaRemarks")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("OutTime")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ManualAttendanceID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("ManualAttendances");
                });

            modelBuilder.Entity("HRIS_R62.Models.MaternityBill", b =>
                {
                    b.Property<string>("MaternityBillID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("ActualCurrentSalary")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ActualNetPayable")
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("ActualPay")
                        .HasColumnType("decimal(10,4)");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("BasicSalary")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("Computed3MonthNetPayable")
                        .HasColumnType("decimal(10,4)");

                    b.Property<int?>("Computed3MonthWorkingDays")
                        .HasColumnType("int");

                    b.Property<decimal>("ComputedNetPayable")
                        .HasColumnType("decimal(10,4)");

                    b.Property<decimal>("ComputedPay")
                        .HasColumnType("decimal(10,4)");

                    b.Property<DateTime?>("CurrentMonth")
                        .HasColumnType("date");

                    b.Property<decimal?>("EarnedLeaveAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("EarnedLeaveDays")
                        .HasColumnType("decimal(10,4)");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FromMonth")
                        .HasColumnType("date");

                    b.Property<string>("LocalAreaClerance")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocalAreaRemarks")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaternityConfigurationID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("NumberOfMonths")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToMonth")
                        .HasColumnType("date");

                    b.Property<int?>("WorkingDays")
                        .HasColumnType("int");

                    b.HasKey("MaternityBillID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("MaternityConfigurationID");

                    b.ToTable("MaternityBills");
                });

            modelBuilder.Entity("HRIS_R62.Models.MaternityConfiguration", b =>
                {
                    b.Property<string>("MaternityConfigurationID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CurrentWithdrawalDate")
                        .HasColumnType("date");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InstallmentType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsEligible")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("JoiningDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LastWithdrawalDate")
                        .HasColumnType("date");

                    b.Property<int?>("NextWithdrawableTime")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaternityConfigurationID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("MaternityConfigurations");
                });

            modelBuilder.Entity("HRIS_R62.Models.NightAllowance", b =>
                {
                    b.Property<string>("NightAllowanceID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmploymentTypeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NightAllowanceRate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SalaryMaximum")
                        .HasColumnType("money");

                    b.Property<decimal>("SalaryMinimum")
                        .HasColumnType("money");

                    b.HasKey("NightAllowanceID");

                    b.HasIndex("EmploymentTypeID");

                    b.ToTable("NightAllowances");
                });

            modelBuilder.Entity("HRIS_R62.Models.NightAllowanceTime", b =>
                {
                    b.Property<string>("NightAllowanceTimeID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AllowanceType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("EmploymentTypeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NightHours")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NightMinutes")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("NightAllowanceTimeID");

                    b.HasIndex("EmploymentTypeID");

                    b.ToTable("NightAllowanceTimes");
                });

            modelBuilder.Entity("HRIS_R62.Models.OverTime", b =>
                {
                    b.Property<string>("EmployeeOverTimeID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OTDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("OTEndTime")
                        .HasColumnType("date");

                    b.Property<float?>("OTHours")
                        .HasColumnType("real");

                    b.Property<DateTime?>("OTStartTime")
                        .HasColumnType("date");

                    b.HasKey("EmployeeOverTimeID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("OverTimes");
                });

            modelBuilder.Entity("HRIS_R62.Models.ProximityRecord", b =>
                {
                    b.Property<string>("ProximityRecordID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AttendanceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeOnly>("InTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("OutTime")
                        .HasColumnType("time");

                    b.Property<int>("ProximityID")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("RecordDate")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("RecordTime")
                        .HasColumnType("time");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VerifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProximityRecordID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("ProximityRecords");
                });

            modelBuilder.Entity("HRIS_R62.Models.SalaryDeduction", b =>
                {
                    b.Property<string>("SalaryDeductionID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ActivationDate")
                        .HasColumnType("date");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("DeductionDate")
                        .HasColumnType("date");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("date");

                    b.Property<string>("EntryUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocalAreaClerance")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LocalAreaRemarks")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SalaryDeductionID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("SalaryDeductions");
                });

            modelBuilder.Entity("HRIS_R62.Models.SalaryEntry", b =>
                {
                    b.Property<string>("SalaryEntryID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ApplyDate")
                        .HasColumnType("date");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SalaryHeadName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SalaryEntryID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("SalaryEntrys");
                });

            modelBuilder.Entity("HRIS_R62.Models.SalaryGrade", b =>
                {
                    b.Property<string>("SalaryGradeID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("date");

                    b.Property<string>("GradeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GradeStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RuleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SalaryGradeID");

                    b.HasIndex("GradeID");

                    b.ToTable("SalaryGrades");
                });

            modelBuilder.Entity("HRIS_R62.Models.SalaryProcess", b =>
                {
                    b.Property<string>("ProcessID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MonthNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProcessedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SalaryEntryID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SalaryHeadName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("YearNo")
                        .HasColumnType("int");

                    b.HasKey("ProcessID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("SalaryEntryID");

                    b.ToTable("SalaryProcesss");
                });

            modelBuilder.Entity("HRIS_R62.Models.SalaryRecord", b =>
                {
                    b.Property<string>("SalaryRecordID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Absenteeism")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ActualGross")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Arrear")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AttendanceBonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Basic")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ByBankAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ByCashAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CompanyID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ConveyanceAllowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DepartmentID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DesignationID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeInformationEmployeeID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmploymentTypeID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("FoodCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GradeID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Gross")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HoliDayBillAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HouseRent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("date");

                    b.Property<string>("LeaveStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LunchAllowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LunchBillAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MedicalAllowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MobileAllowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("MobileBanking")
                        .HasColumnType("bit");

                    b.Property<int>("MonthDays")
                        .HasColumnType("int");

                    b.Property<decimal>("NetPayable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NightBillAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OTAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OTHours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OTRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OtherAllowances")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OtherDeduction")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PunchDays")
                        .HasColumnType("int");

                    b.Property<decimal>("SalaryAdvance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("SalaryEndDate")
                        .HasColumnType("date");

                    b.Property<string>("SalaryGradeID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SalaryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("SalaryStartDate")
                        .HasColumnType("date");

                    b.Property<string>("SectionID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("SpecialAllowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SpecialBonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TiffinAllowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalHoliDay")
                        .HasColumnType("int");

                    b.Property<int>("TotalLeave")
                        .HasColumnType("int");

                    b.Property<string>("UnitID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkingDays")
                        .HasColumnType("int");

                    b.HasKey("SalaryRecordID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("DesignationID");

                    b.HasIndex("EmployeeInformationEmployeeID");

                    b.HasIndex("EmploymentTypeID");

                    b.HasIndex("GradeID");

                    b.HasIndex("SalaryGradeID");

                    b.HasIndex("SectionID");

                    b.HasIndex("UnitID");

                    b.ToTable("SalaryRecords");
                });

            modelBuilder.Entity("HRIS_R62.Models.Sections", b =>
                {
                    b.Property<string>("SectionsID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SectionNameNative")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SectionShortName")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("SectionsID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("HRIS_R62.Models.ShiftEmployee", b =>
                {
                    b.Property<string>("ShiftEmployeeID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DateWiseOfficeTimeID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ShiftEmployeeID");

                    b.HasIndex("DateWiseOfficeTimeID");

                    b.ToTable("ShiftEmployees");
                });

            modelBuilder.Entity("HRIS_R62.Models.ShiftTime", b =>
                {
                    b.Property<string>("ShiftID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BreakDuration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ConsideredLunchHour")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("ShiftEnd")
                        .HasColumnType("date");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("ShiftStart")
                        .HasColumnType("date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("ShiftID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("ShiftTimes");
                });

            modelBuilder.Entity("HRIS_R62.Models.SpecialEmployee", b =>
                {
                    b.Property<string>("SpecialEmployeeID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AttendanceType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeInformationsEmployeeID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("date");

                    b.HasKey("SpecialEmployeeID");

                    b.HasIndex("EmployeeInformationsEmployeeID");

                    b.ToTable("SpecialEmployees");
                });

            modelBuilder.Entity("HRIS_R62.Models.Suspend", b =>
                {
                    b.Property<string>("SuspendID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeInformationsEmployeeID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntryUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocalAreaClerance")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Release")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ReleasedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("SuspendDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SuspendID");

                    b.HasIndex("EmployeeInformationsEmployeeID");

                    b.ToTable("Suspends");
                });

            modelBuilder.Entity("HRIS_R62.Models.TaxAmount", b =>
                {
                    b.Property<string>("TaxAmountID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("date");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeInformationsEmployeeID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EntryUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TaxAmountValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TaxType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TaxYear")
                        .HasColumnType("int");

                    b.HasKey("TaxAmountID");

                    b.HasIndex("EmployeeInformationsEmployeeID");

                    b.ToTable("TaxAmounts");
                });

            modelBuilder.Entity("HRIS_R62.Models.TaxExempted", b =>
                {
                    b.Property<string>("TaxExemptedID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ApprovedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("date");

                    b.Property<decimal>("Conveyance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeInformationsEmployeeID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("HouseRent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Medical")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TaxYear")
                        .HasColumnType("int");

                    b.Property<decimal>("YearlyExemptedTaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("YearlySpecialExemptedTaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TaxExemptedID");

                    b.HasIndex("EmployeeInformationsEmployeeID");

                    b.ToTable("TaxExempteds");
                });

            modelBuilder.Entity("HRIS_R62.Models.TaxRule", b =>
                {
                    b.Property<string>("TaxRuleID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("EffectiveFrom")
                        .HasColumnType("date");

                    b.Property<DateTime>("EffectiveTo")
                        .HasColumnType("date");

                    b.Property<string>("EmployeeInformationEmployeeID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaxSpecialAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinSpecialAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RuleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TaxExemptedID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TaxPercentage")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("TaxRuleID");

                    b.HasIndex("EmployeeInformationEmployeeID");

                    b.HasIndex("TaxExemptedID");

                    b.ToTable("TaxRules");
                });

            modelBuilder.Entity("HRIS_R62.Models.TiffinAllowanceRate", b =>
                {
                    b.Property<string>("TiffinAllowanceRateID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DesignationID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("RateInTaka")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TiffinAllowanceRateID");

                    b.HasIndex("DesignationID");

                    b.ToTable("TiffinAllowanceRates");
                });

            modelBuilder.Entity("HRIS_R62.Models.TiffinAllowanceTime", b =>
                {
                    b.Property<string>("TiffinAllowanceID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("AllowanceDate")
                        .HasColumnType("date");

                    b.Property<string>("AllowanceType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("EmploymentTypeID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("time");

                    b.HasKey("TiffinAllowanceID");

                    b.HasIndex("EmploymentTypeID");

                    b.ToTable("TiffinAllowanceTimes");
                });

            modelBuilder.Entity("HRIS_R62.Models.Unit", b =>
                {
                    b.Property<string>("UnitID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("UnitID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("JobLeft", b =>
                {
                    b.Property<string>("JobLeftID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("date");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EntryUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("JobLeftDate")
                        .HasColumnType("date");

                    b.Property<string>("JobLeftType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocalAreaClerance")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocalAreaRemarks")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("JobLeftID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("JobLefts");
                });

            modelBuilder.Entity("NomineeInformation", b =>
                {
                    b.Property<string>("NomineeID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeInformationsEmployeeID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Relation")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("NomineeID");

                    b.HasIndex("EmployeeInformationsEmployeeID");

                    b.ToTable("NomineeInformations");
                });

            modelBuilder.Entity("SpouseInformation", b =>
                {
                    b.Property<string>("SpouseID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BloodGroup")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("EmployeeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeInformationsEmployeeID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SpouseName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SpouseID");

                    b.HasIndex("EmployeeInformationsEmployeeID");

                    b.ToTable("SpouseInformations");
                });

            modelBuilder.Entity("HRIS_R62.Models.AttendanceBonus", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("AttendanceBonuses")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.AttendanceRecord", b =>
                {
                    b.HasOne("HRIS_R62.Models.AttendanceConfiguration", "AttendanceConfiguration")
                        .WithMany("AttendanceRecords")
                        .HasForeignKey("AttendanceConfigurationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRIS_R62.Models.AttendanceStatus", "AttendanceStatus")
                        .WithMany("AttendanceRecords")
                        .HasForeignKey("AttendanceStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRIS_R62.Models.EmployeeInformation", null)
                        .WithMany("AttendanceRecords")
                        .HasForeignKey("EmployeeInformationEmployeeID");

                    b.Navigation("AttendanceConfiguration");

                    b.Navigation("AttendanceStatus");
                });

            modelBuilder.Entity("HRIS_R62.Models.BonusRecord", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("BonusRecords")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.Building", b =>
                {
                    b.HasOne("HRIS_R62.Models.Company", "Company")
                        .WithMany("Buildings")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("HRIS_R62.Models.CareerHistory", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("CareerHistorys")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.ChildrenInformation", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("ChildrenInformations")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.ContactPersonInformation", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("ContactPersonInformations")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.DateWiseOfficeTime", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", null)
                        .WithMany("DateWiseOfficeTimes")
                        .HasForeignKey("EmployeeInformationEmployeeID");
                });

            modelBuilder.Entity("HRIS_R62.Models.Department", b =>
                {
                    b.HasOne("HRIS_R62.Models.Company", "Company")
                        .WithMany("Departments")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("HRIS_R62.Models.DisciplinaryAction", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("DisciplinaryActions")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.EarlyLeaveInformation", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("EarlyLeaveInformations")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.EmployeeBenefits", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("EmployeeBenefitss")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRIS_R62.Models.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRIS_R62.Models.SalaryGrade", "SalaryGrade")
                        .WithMany()
                        .HasForeignKey("SalaryGradeID");

                    b.HasOne("HRIS_R62.Models.SalaryRecord", "SalaryRecord")
                        .WithMany("EmployeeBenefits")
                        .HasForeignKey("SalaryRecordID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");

                    b.Navigation("Grade");

                    b.Navigation("SalaryGrade");

                    b.Navigation("SalaryRecord");
                });

            modelBuilder.Entity("HRIS_R62.Models.EmployeeComplaint", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("EmployeeComplaints")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.EmployeeInformation", b =>
                {
                    b.HasOne("HRIS_R62.Models.AttendanceRecord", "AttendanceRecord")
                        .WithMany()
                        .HasForeignKey("AttendanceRecordID");

                    b.HasOne("HRIS_R62.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRIS_R62.Models.Department", "Department")
                        .WithMany("EmployeeInformation")
                        .HasForeignKey("DepartmentID");

                    b.HasOne("HRIS_R62.Models.Designation", "Designation")
                        .WithMany("EmployeeInformation")
                        .HasForeignKey("DesignationID");

                    b.HasOne("HRIS_R62.Models.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionID");

                    b.HasOne("EmploymentType", "EmploymentType")
                        .WithMany()
                        .HasForeignKey("EmploymentTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRIS_R62.Models.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeID");

                    b.HasOne("HRIS_R62.Models.LineInformation", "LineInformation")
                        .WithMany()
                        .HasForeignKey("LineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRIS_R62.Models.SalaryGrade", "SalaryGrade")
                        .WithMany("EmployeeInformation")
                        .HasForeignKey("SalaryGradeID");

                    b.HasOne("HRIS_R62.Models.SalaryRecord", "SalaryRecord")
                        .WithMany()
                        .HasForeignKey("SalaryRecordID");

                    b.HasOne("HRIS_R62.Models.Sections", "Section")
                        .WithMany()
                        .HasForeignKey("SectionID");

                    b.HasOne("HRIS_R62.Models.ShiftEmployee", "ShiftEmployee")
                        .WithMany()
                        .HasForeignKey("ShiftEmployeeID");

                    b.HasOne("HRIS_R62.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttendanceRecord");

                    b.Navigation("Company");

                    b.Navigation("Department");

                    b.Navigation("Designation");

                    b.Navigation("Division");

                    b.Navigation("EmploymentType");

                    b.Navigation("Grade");

                    b.Navigation("LineInformation");

                    b.Navigation("SalaryGrade");

                    b.Navigation("SalaryRecord");

                    b.Navigation("Section");

                    b.Navigation("ShiftEmployee");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("HRIS_R62.Models.EmployeeSkill", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("EmployeeSkills")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.EmployeeTax", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("EmployeeTaxs")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.FestivalBonus", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("FestivalBonuss")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.FoodCharge", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("FoodCharges")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.HoliDayBillRate", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("HoliDayBillRates")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.HoliDayEntitledEmployee", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "Employee")
                        .WithMany("HoliDayEntitledEmployees")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HRIS_R62.Models.HoliDayInformation", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("HoliDayInformations")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.LateApproval", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("LateApprovals")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.LeaveApproval", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformations")
                        .WithMany("LeaveApprovals")
                        .HasForeignKey("EmployeeInformationsEmployeeID");

                    b.Navigation("EmployeeInformations");
                });

            modelBuilder.Entity("HRIS_R62.Models.LeaveEncashment", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.LeaveEncashmentRate", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", null)
                        .WithMany("LeaveEncashmentRates")
                        .HasForeignKey("EmployeeInformationEmployeeID");

                    b.HasOne("HRIS_R62.Models.LeaveEncashment", "LeaveEncashment")
                        .WithMany("LeaveEncashmentRates")
                        .HasForeignKey("LeaveEncashmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LeaveEncashment");
                });

            modelBuilder.Entity("HRIS_R62.Models.LeaveRecord", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("LeaveRecords")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRIS_R62.Models.MaternityBill", null)
                        .WithMany("LeaveRecords")
                        .HasForeignKey("MaternityBillID");

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.LineInformation", b =>
                {
                    b.HasOne("HRIS_R62.Models.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingID");

                    b.HasOne("HRIS_R62.Models.Company", "Company")
                        .WithMany("LineInformations")
                        .HasForeignKey("CompanyID");

                    b.HasOne("HRIS_R62.Models.Division", "Division")
                        .WithMany("LineInformation")
                        .HasForeignKey("DivisionID");

                    b.HasOne("HRIS_R62.Models.Sections", "Sections")
                        .WithMany()
                        .HasForeignKey("SectionsID");

                    b.HasOne("HRIS_R62.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitID");

                    b.Navigation("Building");

                    b.Navigation("Company");

                    b.Navigation("Division");

                    b.Navigation("Sections");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("HRIS_R62.Models.ManualAttendance", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("ManualAttendances")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.MaternityBill", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("MaternityBills")
                        .HasForeignKey("EmployeeID");

                    b.HasOne("HRIS_R62.Models.MaternityConfiguration", "MaternityConfiguration")
                        .WithMany("MaternityBills")
                        .HasForeignKey("MaternityConfigurationID");

                    b.Navigation("EmployeeInformation");

                    b.Navigation("MaternityConfiguration");
                });

            modelBuilder.Entity("HRIS_R62.Models.MaternityConfiguration", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("MaternityConfigurations")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.NightAllowance", b =>
                {
                    b.HasOne("EmploymentType", "EmployeeType")
                        .WithMany("NightAllowances")
                        .HasForeignKey("EmploymentTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeType");
                });

            modelBuilder.Entity("HRIS_R62.Models.NightAllowanceTime", b =>
                {
                    b.HasOne("EmploymentType", "EmployeeType")
                        .WithMany("NightAllowancesTime")
                        .HasForeignKey("EmploymentTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeType");
                });

            modelBuilder.Entity("HRIS_R62.Models.OverTime", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("OverTimes")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.ProximityRecord", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.SalaryDeduction", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("SalaryDeductions")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.SalaryEntry", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("SalaryEntrys")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.SalaryGrade", b =>
                {
                    b.HasOne("HRIS_R62.Models.Grade", "Grade")
                        .WithMany("SalaryGrades")
                        .HasForeignKey("GradeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("HRIS_R62.Models.SalaryProcess", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("SalaryProcesss")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRIS_R62.Models.SalaryEntry", "SalaryEntry")
                        .WithMany("SalaryProcesses")
                        .HasForeignKey("SalaryEntryID");

                    b.Navigation("EmployeeInformation");

                    b.Navigation("SalaryEntry");
                });

            modelBuilder.Entity("HRIS_R62.Models.SalaryRecord", b =>
                {
                    b.HasOne("HRIS_R62.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyID");

                    b.HasOne("HRIS_R62.Models.Department", "Department")
                        .WithMany("SalaryRecords")
                        .HasForeignKey("DepartmentID");

                    b.HasOne("HRIS_R62.Models.Designation", "Designation")
                        .WithMany()
                        .HasForeignKey("DesignationID");

                    b.HasOne("HRIS_R62.Models.EmployeeInformation", null)
                        .WithMany("SalaryRecords")
                        .HasForeignKey("EmployeeInformationEmployeeID");

                    b.HasOne("EmploymentType", "EmploymentType")
                        .WithMany()
                        .HasForeignKey("EmploymentTypeID");

                    b.HasOne("HRIS_R62.Models.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeID");

                    b.HasOne("HRIS_R62.Models.SalaryGrade", "SalaryGrade")
                        .WithMany()
                        .HasForeignKey("SalaryGradeID");

                    b.HasOne("HRIS_R62.Models.Sections", "Sections")
                        .WithMany()
                        .HasForeignKey("SectionID");

                    b.HasOne("HRIS_R62.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitID");

                    b.Navigation("Company");

                    b.Navigation("Department");

                    b.Navigation("Designation");

                    b.Navigation("EmploymentType");

                    b.Navigation("Grade");

                    b.Navigation("SalaryGrade");

                    b.Navigation("Sections");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("HRIS_R62.Models.Sections", b =>
                {
                    b.HasOne("HRIS_R62.Models.Company", "Company")
                        .WithMany("Sectionss")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("HRIS_R62.Models.ShiftEmployee", b =>
                {
                    b.HasOne("HRIS_R62.Models.DateWiseOfficeTime", "DateWiseOfficeTime")
                        .WithMany("ShiftEmployees")
                        .HasForeignKey("DateWiseOfficeTimeID");

                    b.Navigation("DateWiseOfficeTime");
                });

            modelBuilder.Entity("HRIS_R62.Models.ShiftTime", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("ShiftTimes")
                        .HasForeignKey("EmployeeID");

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.SpecialEmployee", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformations")
                        .WithMany("SpecialEmployees")
                        .HasForeignKey("EmployeeInformationsEmployeeID");

                    b.Navigation("EmployeeInformations");
                });

            modelBuilder.Entity("HRIS_R62.Models.Suspend", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformations")
                        .WithMany("Suspends")
                        .HasForeignKey("EmployeeInformationsEmployeeID");

                    b.Navigation("EmployeeInformations");
                });

            modelBuilder.Entity("HRIS_R62.Models.TaxAmount", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformations")
                        .WithMany("TaxAmounts")
                        .HasForeignKey("EmployeeInformationsEmployeeID");

                    b.Navigation("EmployeeInformations");
                });

            modelBuilder.Entity("HRIS_R62.Models.TaxExempted", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformations")
                        .WithMany("TaxExempteds")
                        .HasForeignKey("EmployeeInformationsEmployeeID");

                    b.Navigation("EmployeeInformations");
                });

            modelBuilder.Entity("HRIS_R62.Models.TaxRule", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", null)
                        .WithMany("TaxRules")
                        .HasForeignKey("EmployeeInformationEmployeeID");

                    b.HasOne("HRIS_R62.Models.TaxExempted", "TaxExempted")
                        .WithMany("TaxRules")
                        .HasForeignKey("TaxExemptedID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaxExempted");
                });

            modelBuilder.Entity("HRIS_R62.Models.TiffinAllowanceRate", b =>
                {
                    b.HasOne("HRIS_R62.Models.Designation", "Designation")
                        .WithMany("TiffinAllowanceRates")
                        .HasForeignKey("DesignationID");

                    b.Navigation("Designation");
                });

            modelBuilder.Entity("HRIS_R62.Models.TiffinAllowanceTime", b =>
                {
                    b.HasOne("EmploymentType", "EmployeeType")
                        .WithMany("TiffinAllowanceTimes")
                        .HasForeignKey("EmploymentTypeID");

                    b.Navigation("EmployeeType");
                });

            modelBuilder.Entity("HRIS_R62.Models.Unit", b =>
                {
                    b.HasOne("HRIS_R62.Models.Company", "Company")
                        .WithMany("Units")
                        .HasForeignKey("CompanyID");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("JobLeft", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformation")
                        .WithMany("JobLefts")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("NomineeInformation", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformations")
                        .WithMany("NomineeInformations")
                        .HasForeignKey("EmployeeInformationsEmployeeID");

                    b.Navigation("EmployeeInformations");
                });

            modelBuilder.Entity("SpouseInformation", b =>
                {
                    b.HasOne("HRIS_R62.Models.EmployeeInformation", "EmployeeInformations")
                        .WithMany("SpouseInformations")
                        .HasForeignKey("EmployeeInformationsEmployeeID");

                    b.Navigation("EmployeeInformations");
                });

            modelBuilder.Entity("EmploymentType", b =>
                {
                    b.Navigation("NightAllowances");

                    b.Navigation("NightAllowancesTime");

                    b.Navigation("TiffinAllowanceTimes");
                });

            modelBuilder.Entity("HRIS_R62.Models.AttendanceConfiguration", b =>
                {
                    b.Navigation("AttendanceRecords");
                });

            modelBuilder.Entity("HRIS_R62.Models.AttendanceStatus", b =>
                {
                    b.Navigation("AttendanceRecords");
                });

            modelBuilder.Entity("HRIS_R62.Models.Company", b =>
                {
                    b.Navigation("Buildings");

                    b.Navigation("Departments");

                    b.Navigation("LineInformations");

                    b.Navigation("Sectionss");

                    b.Navigation("Units");
                });

            modelBuilder.Entity("HRIS_R62.Models.DateWiseOfficeTime", b =>
                {
                    b.Navigation("ShiftEmployees");
                });

            modelBuilder.Entity("HRIS_R62.Models.Department", b =>
                {
                    b.Navigation("EmployeeInformation");

                    b.Navigation("SalaryRecords");
                });

            modelBuilder.Entity("HRIS_R62.Models.Designation", b =>
                {
                    b.Navigation("EmployeeInformation");

                    b.Navigation("TiffinAllowanceRates");
                });

            modelBuilder.Entity("HRIS_R62.Models.Division", b =>
                {
                    b.Navigation("LineInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.EmployeeInformation", b =>
                {
                    b.Navigation("AttendanceBonuses");

                    b.Navigation("AttendanceRecords");

                    b.Navigation("BonusRecords");

                    b.Navigation("CareerHistorys");

                    b.Navigation("ChildrenInformations");

                    b.Navigation("ContactPersonInformations");

                    b.Navigation("DateWiseOfficeTimes");

                    b.Navigation("DisciplinaryActions");

                    b.Navigation("EarlyLeaveInformations");

                    b.Navigation("EmployeeBenefitss");

                    b.Navigation("EmployeeComplaints");

                    b.Navigation("EmployeeSkills");

                    b.Navigation("EmployeeTaxs");

                    b.Navigation("FestivalBonuss");

                    b.Navigation("FoodCharges");

                    b.Navigation("HoliDayBillRates");

                    b.Navigation("HoliDayEntitledEmployees");

                    b.Navigation("HoliDayInformations");

                    b.Navigation("JobLefts");

                    b.Navigation("LateApprovals");

                    b.Navigation("LeaveApprovals");

                    b.Navigation("LeaveEncashmentRates");

                    b.Navigation("LeaveRecords");

                    b.Navigation("ManualAttendances");

                    b.Navigation("MaternityBills");

                    b.Navigation("MaternityConfigurations");

                    b.Navigation("NomineeInformations");

                    b.Navigation("OverTimes");

                    b.Navigation("SalaryDeductions");

                    b.Navigation("SalaryEntrys");

                    b.Navigation("SalaryProcesss");

                    b.Navigation("SalaryRecords");

                    b.Navigation("ShiftTimes");

                    b.Navigation("SpecialEmployees");

                    b.Navigation("SpouseInformations");

                    b.Navigation("Suspends");

                    b.Navigation("TaxAmounts");

                    b.Navigation("TaxExempteds");

                    b.Navigation("TaxRules");
                });

            modelBuilder.Entity("HRIS_R62.Models.Grade", b =>
                {
                    b.Navigation("SalaryGrades");
                });

            modelBuilder.Entity("HRIS_R62.Models.LeaveEncashment", b =>
                {
                    b.Navigation("LeaveEncashmentRates");
                });

            modelBuilder.Entity("HRIS_R62.Models.MaternityBill", b =>
                {
                    b.Navigation("LeaveRecords");
                });

            modelBuilder.Entity("HRIS_R62.Models.MaternityConfiguration", b =>
                {
                    b.Navigation("MaternityBills");
                });

            modelBuilder.Entity("HRIS_R62.Models.SalaryEntry", b =>
                {
                    b.Navigation("SalaryProcesses");
                });

            modelBuilder.Entity("HRIS_R62.Models.SalaryGrade", b =>
                {
                    b.Navigation("EmployeeInformation");
                });

            modelBuilder.Entity("HRIS_R62.Models.SalaryRecord", b =>
                {
                    b.Navigation("EmployeeBenefits");
                });

            modelBuilder.Entity("HRIS_R62.Models.TaxExempted", b =>
                {
                    b.Navigation("TaxRules");
                });
#pragma warning restore 612, 618
        }
    }
}
